name: Build Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create necessary directories (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        if (-not (Test-Path config)) { New-Item -ItemType Directory -Path config }
        if (-not (Test-Path data)) { New-Item -ItemType Directory -Path data }
        if (-not (Test-Path logs)) { New-Item -ItemType Directory -Path logs }
      shell: powershell
        
    - name: Create necessary directories (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p config data logs
        
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: python simple_build.py
      
    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest'
      run: python simple_build.py
      
    - name: Create release package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd dist
        Compress-Archive -Path NaverBlogAutomation -DestinationPath NaverBlogAutomation-Windows.zip
      shell: powershell

    - name: Create release package (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd dist
        zip -r NaverBlogAutomation-macOS.zip NaverBlogAutomation/

    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: NaverBlogAutomation-Windows
        path: dist/NaverBlogAutomation-Windows.zip

    - name: Upload artifacts (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: NaverBlogAutomation-macOS
        path: dist/NaverBlogAutomation-macOS.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: NaverBlogAutomation-Windows
        path: ./releases/

    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: NaverBlogAutomation-macOS
        path: ./releases/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./releases/NaverBlogAutomation-Windows.zip
          ./releases/NaverBlogAutomation-macOS.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}